#!/usr/bin/env node

/**
 * Skrypt do czyszczenia i aktualizacji tag√≥w katalogu
 * 1. Czy≈õci wszystkie tagi z catalog_tags (Sektory technologiczne)
 * 2. Czy≈õci wszystkie bran≈ºe z catalog_industries (Bran≈ºe)
 * 3. Dodaje nowe tagi do catalog_tags
 */

require('dotenv').config();
const { Pool } = require('pg');

// Konfiguracja po≈ÇƒÖczenia z Railway
const getDatabaseUrl = () => {
  if (process.env.RAILWAY_ENVIRONMENT) {
    if (process.env.DATABASE_URL && process.env.DATABASE_URL.trim()) {
      return process.env.DATABASE_URL;
    }
  }
  if (process.env.DATABASE_URL) {
    return process.env.DATABASE_URL;
  }
  throw new Error('‚ùå DATABASE_URL nie jest ustawiony');
};

// Nowe tagi dla sektor√≥w technologicznych
const newTags = [
  'obrabiarki',
  'systemy przemys≈Çowe do ciƒôcia i formowania',
  'maszyny CNC',
  'narzƒôdzia precyzyjne',
  'roboty przemys≈Çowe',
  'oprogramowanie dla automatyki przemys≈Çowej',
  'komponenty do zautomatyzowanej produkcji',
  'akcesoria dla bran≈ºy przemys≈Çowej',
  'czƒô≈õci zamienne do maszyn',
  'oprogramowanie dla przemys≈Çu',
  'urzƒÖdzenia i oprogramowanie 3D',
  'odzie≈º robocza i akcesoria',
  'napƒôdy hydrauliczne',
  'napƒôdy pneumatyczne',
  'materia≈Çy smarne dla bran≈ºy przemys≈Çowej',
  'napƒôdy elektryczne',
  'akcesoria elektrotechniczne i okablowania',
  'farby, lakiery i chemia przemys≈Çowa',
  'us≈Çugi finansowe dla produkcji przemys≈Çowej',
  'us≈Çugi ubezpieczeniowe dla produkcji przemys≈Çowej'
];

async function updateCatalogTags() {
  let pool;
  
  try {
    const databaseUrl = getDatabaseUrl();
    console.log('üîç ≈ÅƒÖczenie z bazƒÖ danych Railway...');
    
    let sslOption = false;
    try {
      const urlObj = new URL(databaseUrl);
      const host = urlObj.hostname || '';
      const isInternalHost = host.endsWith('railway.internal');
      if (!isInternalHost) {
        sslOption = { rejectUnauthorized: false };
      }
    } catch (e) {
      sslOption = { rejectUnauthorized: false };
    }
    
    pool = new Pool({
      connectionString: databaseUrl,
      ssl: sslOption,
      connectionTimeoutMillis: 30000,
    });
    
    await pool.query('SELECT NOW()');
    console.log('‚úÖ Po≈ÇƒÖczono z bazƒÖ danych Railway\n');
    
    // 1. Sprawd≈∫ ile jest tag√≥w i bran≈º przed czyszczeniem
    console.log('üìä Stan przed czyszczeniem:');
    const beforeTags = await pool.query('SELECT COUNT(*) as count FROM catalog_tags');
    const beforeIndustries = await pool.query('SELECT COUNT(*) as count FROM catalog_industries');
    console.log(`   Sektory technologiczne (catalog_tags): ${beforeTags.rows[0].count}`);
    console.log(`   Bran≈ºe (catalog_industries): ${beforeIndustries.rows[0].count}\n`);
    
    // 2. Wyczy≈õƒá wszystkie tagi z catalog_tags
    console.log('üßπ Czyszczenie catalog_tags (Sektory technologiczne)...');
    await pool.query('DELETE FROM catalog_tags');
    console.log('‚úÖ Wyczyszczono catalog_tags\n');
    
    // 3. Wyczy≈õƒá wszystkie bran≈ºe z catalog_industries
    console.log('üßπ Czyszczenie catalog_industries (Bran≈ºe)...');
    await pool.query('DELETE FROM catalog_industries');
    console.log('‚úÖ Wyczyszczono catalog_industries\n');
    
    // 4. Dodaj nowe tagi do catalog_tags
    console.log('üìù Dodawanie nowych tag√≥w do Sektor√≥w technologicznych...');
    console.log(`   Liczba tag√≥w do dodania: ${newTags.length}\n`);
    
    for (let i = 0; i < newTags.length; i++) {
      const tag = newTags[i];
      console.log(`   [${i + 1}/${newTags.length}] Dodawanie: "${tag}"`);
      
      await pool.query(
        `INSERT INTO catalog_tags (tag, usage_count, created_at, updated_at)
         VALUES ($1, 0, NOW(), NOW())`,
        [tag]
      );
    }
    
    console.log('\n‚úÖ Dodano wszystkie nowe tagi\n');
    
    // 5. Poka≈º stan po aktualizacji
    console.log('üìä Stan po aktualizacji:');
    const afterTags = await pool.query('SELECT COUNT(*) as count FROM catalog_tags');
    const afterIndustries = await pool.query('SELECT COUNT(*) as count FROM catalog_industries');
    console.log(`   Sektory technologiczne (catalog_tags): ${afterTags.rows[0].count}`);
    console.log(`   Bran≈ºe (catalog_industries): ${afterIndustries.rows[0].count}\n`);
    
    // 6. Poka≈º wszystkie nowe tagi
    console.log('üìã Lista nowych tag√≥w w bazie:');
    const allTags = await pool.query('SELECT tag FROM catalog_tags ORDER BY tag ASC');
    allTags.rows.forEach((row, idx) => {
      console.log(`   ${idx + 1}. ${row.tag}`);
    });
    
    console.log('\n' + '='.repeat(60));
    console.log('‚úÖ AKTUALIZACJA ZAKO≈ÉCZONA POMY≈öLNIE');
    console.log('='.repeat(60));
    console.log('\nPodsumowanie:');
    console.log(`  - Usuniƒôto ${beforeTags.rows[0].count} starych tag√≥w`);
    console.log(`  - Usuniƒôto ${beforeIndustries.rows[0].count} starych bran≈º`);
    console.log(`  - Dodano ${newTags.length} nowych tag√≥w`);
    console.log('\nWszystkie tagi i bran≈ºe w checkli≈õcie zosta≈Çy wyczyszczone!');
    console.log('Nowe tagi dla sektor√≥w technologicznych sƒÖ ju≈º dostƒôpne.\n');
    
  } catch (error) {
    console.error('‚ùå B≈ÇƒÖd:', error);
    console.error('Szczeg√≥≈Çy:', error.message);
    if (error.stack) {
      console.error('Stack trace:', error.stack);
    }
    process.exit(1);
  } finally {
    if (pool) {
      await pool.end();
      console.log('üîå Roz≈ÇƒÖczono z bazƒÖ danych');
    }
  }
}

// Uruchom skrypt
console.log('üöÄ Rozpoczynam aktualizacjƒô tag√≥w katalogu...\n');
updateCatalogTags();

